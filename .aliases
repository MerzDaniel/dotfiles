# .aliases

# deps
dependencies_install() {
  pacman -S fzf the_silver_searcher jq jo go
  go install github.com/miko/go-graphql-cli@latest
}


# quickly update aliases
alias al='vim ~/.aliases && . ~/.aliases && echo Resourced ~/.aliases'
# quickly update path
alias pa='vim ~/.path && . ~/.path && echo Resourced ~/.path'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# quickly jump to a sub directory
c() {
	dir=$(find -maxdepth 3 -type d | fzf)
	cd "$dir"
}

alias ls='ls --color=auto'
alias la='ls -a'
alias ll='ls -l'
alias lla='ls -la'

# network
alias ip6='ip address | grep inet6'
alias host='getent hosts'

# pass
alias pass='PASSWORD_STORE_ENABLE_EXTENSIONS=true pass'
alias pw='pass fzf -c'

# github
#
# quick clone own repos, fill the .repos file with update script below
gclonefzf() {
  cat ~/.repos | fzf | xargs -i git clone git@github.com:{}
}
# gclone <owner/repo>
gclone() {
  if [ "$1" == "" ] ; then 
    gclonefzf
  else
    git clone git@github.com:$1
  fi
}
github_get_repos() (
  header="Authorization: token $GITHUB_TOKEN"
  url='https://api.github.com/graphql'
  query='{owner: repositoryOwner(login: "actano"){repositories(last: 1) {edges{cursor}}}}'
  last_cursor=$(go-graphql-cli --header "$header"  --url "$url" --query "$query" | jq --raw-output .owner.repositories.edges[].cursor)
  #echo $last_cursor

  query='query($after: String $login: String!){owner: repositoryOwner(login: $login){
   repositories(first: 25 after: $after){ edges{
     cursor 
     node { name owner {login} }
   }}
  }}'
  cursor=
   
  while [ "$last_cursor" != "$cursor" ] ; do

    echo iteration
    if [ "$cursor" != "" ] ; then
      result=$(go-graphql-cli --header "$header"  --url "$url" --query "$query" --var after=$cursor --var login=actano)
    else 
      result=$(go-graphql-cli --header "$header"  --url "$url" --query "$query" --var login=actano)
    fi

    cursor=$(echo $result | jq --raw-output '.owner.repositories.edges[-1].cursor')
    echo $result | jq --raw-output '.owner.repositories.edges[].node| .owner.login + "/" + .name'

  done
)
github_update_repo_list() (
  github_get_repos > ~/.repos
)
